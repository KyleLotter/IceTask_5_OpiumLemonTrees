@model IceTask_5_LemonTree_Opium_.Models.CartViewModel
@{
    ViewData["Title"] = "Create Order";
}
<h1 class="page-title">Create New Order</h1>
<h4 style="color:#60a5fa;font-weight:600;">Shopping Cart</h4>
<hr />

<div class="row">
    <div class="col-md-8">
        <form asp-action="Create" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="CustomerId" class="control-label">Customer ID</label>
                <input asp-for="CustomerId" class="form-control" type="number" required />
                <span asp-validation-for="CustomerId" class="text-danger"></span>
            </div>

            <div class="form-group mt-3">
                <label for="Status" class="control-label">Order Status</label>
                <select id="Status" name="Status" class="form-control" required>
                    <option value="">-- Select Status --</option>
                    <option value="Pending">Pending</option>
                    <option value="Processed">Processed</option>
                    <option value="Shipped">Shipped</option>
                    <option value="Delivered">Delivered</option>
                </select>
            </div>

            <h5 class="mt-4" style="color:#6366f1;font-weight:600;">Select Products</h5>
            <div class="table-responsive">
                <table class="table table-striped fancy-table">
                    <thead>
                        <tr>
                            <th>Product Name</th>
                            <th>Price</th>
                            <th>Available Stock</th>
                            <th>Quantity</th>
                            <th>Line Total</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < Model.CartItems.Count; i++)
                        {
                            <tr>
                                <td>
                                    @Model.CartItems[i].ProductName
                                    <input type="hidden" asp-for="CartItems[i].ProductId" />
                                    <input type="hidden" asp-for="CartItems[i].ProductName" />
                                    <input type="hidden" asp-for="CartItems[i].Price" />
                                    <input type="hidden" asp-for="CartItems[i].AvailableStock" />
                                </td>
                                <td>R @Model.CartItems[i].Price.ToString("N2")</td>
                                <td>@Model.CartItems[i].AvailableStock</td>
                                <td>
                                    <input asp-for="CartItems[i].Quantity"
                                           class="form-control quantity-input"
                                           type="number"
                                           min="0"
                                           max="@Model.CartItems[i].AvailableStock"
                                           value="0"
                                           data-price="@Model.CartItems[i].Price"
                                           style="width: 100px;" />
                                    <span asp-validation-for="CartItems[i].Quantity" class="text-danger"></span>
                                </td>
                                <td class="line-total">R 0.00</td>
                            </tr>
                        }
                    </tbody>
                    <tfoot>
                        <tr>
                            <td colspan="4" class="text-right"><strong>Total Amount:</strong></td>
                            <td><strong id="grand-total">R 0.00</strong></td>
                        </tr>
                    </tfoot>
                </table>
            </div>

            <div class="form-group mt-3">
                <input type="submit" value="Place Order" class="btn btn-fancy btn-lg" />
                <a asp-action="Index" class="btn btn-secondary btn-fancy">Cancel</a>
            </div>
        </form>
    </div>

    <div class="col-md-4">
        <div class="card order-summary">
            <div class="card-header">
                <h5>Order Summary</h5>
            </div>
            <div class="card-body">
                <p><strong>Customer ID:</strong> <span id="summary-customer">Not set</span></p>
                <p><strong>Items in Cart:</strong> <span id="summary-items">0</span></p>
                <p><strong>Total:</strong> <span id="summary-total">R 0.00</span></p>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        // Calculate line totals and grand total
        function updateTotals() {
            let grandTotal = 0;
            let itemCount = 0;

            document.querySelectorAll('.quantity-input').forEach(function(input) {
                const quantity = parseInt(input.value) || 0;
                const price = parseFloat(input.dataset.price);
                const lineTotal = quantity * price;

                // Update line total
                const row = input.closest('tr');
                row.querySelector('.line-total').textContent = 'R ' + lineTotal.toFixed(2);

                grandTotal += lineTotal;
                if (quantity > 0) {
                    itemCount++;
                }
            });

            // Update grand total
            document.getElementById('grand-total').textContent = 'R ' + grandTotal.toFixed(2);
            document.getElementById('summary-total').textContent = 'R ' + grandTotal.toFixed(2);
            document.getElementById('summary-items').textContent = itemCount;
        }

        // Update customer ID in summary
        document.querySelector('input[name="CustomerId"]').addEventListener('input', function() {
            document.getElementById('summary-customer').textContent = this.value || 'Not set';
        });

        // Add event listeners to all quantity inputs
        document.querySelectorAll('.quantity-input').forEach(function(input) {
            input.addEventListener('input', updateTotals);
        });

        // Initial calculation
        updateTotals();
    </script>
}

<style>
    body {
        background: linear-gradient(135deg, #f8fafc 0%, #e0e7ff 100%);
    }

    .card {
        border-radius: 16px;
        box-shadow: 0 4px 24px rgba(60, 72, 88, 0.12);
        background: #fff;
        margin-bottom: 24px;
    }

    .card-header {
        background: linear-gradient(90deg, #6366f1 0%, #60a5fa 100%);
        color: #fff;
        border-radius: 16px 16px 0 0;
        font-weight: 600;
        font-size: 1.2rem;
    }

    .fancy-table {
        background: #fff;
        border-radius: 16px;
        box-shadow: 0 4px 24px rgba(60, 72, 88, 0.12);
        overflow: hidden;
    }

        .fancy-table th {
            background: #6366f1;
            color: #fff;
            font-weight: 600;
            border: none;
        }

        .fancy-table td {
            border-top: 1px solid #e5e7eb;
            vertical-align: middle;
        }

        .fancy-table tr:hover {
            background: #f3f4f6;
            transition: background 0.2s;
        }

    .btn-fancy {
        background: linear-gradient(90deg, #6366f1 0%, #60a5fa 100%);
        color: #fff;
        border: none;
        border-radius: 8px;
        padding: 6px 18px;
        font-weight: 500;
        transition: background 0.2s;
        margin-right: 8px;
    }

        .btn-fancy:hover {
            background: linear-gradient(90deg, #60a5fa 0%, #6366f1 100%);
            color: #fff;
        }

    .page-title {
        color: #6366f1;
        font-weight: 700;
        letter-spacing: 1px;
        margin-bottom: 24px;
        text-shadow: 0 2px 8px #e0e7ff;
    }

    .form-group label {
        color: #6366f1;
        font-weight: 500;
    }

    .form-control:focus {
        border-color: #6366f1;
        box-shadow: 0 0 0 0.2rem rgba(99,102,241,.25);
    }

    .order-summary {
        background: #f3f4f6;
        border-radius: 12px;
        padding: 18px;
        box-shadow: 0 2px 8px rgba(99,102,241,.08);
    }
</style>